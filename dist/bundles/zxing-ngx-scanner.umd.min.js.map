{
  "version": 3,
  "file": "zxing-ngx-scanner.umd.min.js",
  "sources": [
    "ng://@zxing/ngx-scanner/node_modules/tslib/tslib.es6.js",
    "ng://@zxing/ngx-scanner/out/app/modules/zxing-scanner/browser-code-reader.ts",
    "ng://@zxing/ngx-scanner/out/app/modules/zxing-scanner/browser-qr-code-reader.ts",
    "ng://@zxing/ngx-scanner/out/app/modules/zxing-scanner/zxing-scanner.component.ts",
    "ng://@zxing/ngx-scanner/out/app/modules/zxing-scanner/zxing-scanner.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import {\n    Reader,\n    BinaryBitmap,\n    HybridBinarizer,\n    Result,\n    Exception,\n    HTMLCanvasElementLuminanceSource,\n} from '@zxing/library';\n\n/**\n * Based on zxing-typescript BrowserCodeReader\n */\nexport class BrowserCodeReader {\n\n    /**\n     * The HTML video element, used to display the camera stream.\n     */\n    private videoElement: HTMLVideoElement;\n    /**\n     * Should contain the actual registered listener for video play-ended,\n     * used to unregister that listener when needed.\n     */\n    private videoPlayEndedEventListener: EventListener;\n    /**\n     * Should contain the actual registered listener for video playing,\n     * used to unregister that listener when needed.\n     */\n    private videoPlayingEventListener: EventListener;\n    /**\n     * Should contain the actual registered listener for video loaded-metadata,\n     * used to unregister that listener when needed.\n     */\n    private videoLoadedMetadataEventListener: EventListener;\n\n    /**\n     * The HTML image element, used as a fallback for the video element when decoding.\n     */\n    private imageElement: HTMLImageElement;\n    /**\n     * Should contain the actual registered listener for image loading,\n     * used to unregister that listener when needed.\n     */\n    private imageLoadedEventListener: EventListener;\n\n    /**\n     * The HTML canvas element, used to draw the video or image's frame for decoding.\n     */\n    private canvasElement: HTMLCanvasElement;\n    /**\n     * The HTML canvas element context.\n     */\n    private canvasElementContext: CanvasRenderingContext2D;\n\n    /**\n     * The continuous scan timeout Id.\n     */\n    private timeoutHandler: number;\n\n    /**\n     * The stream output from camera.\n     */\n    private stream: MediaStream;\n\n    /**\n     * Constructor for dependency injection.\n     *\n     * @param reader The barcode reader to be used to decode the stream.\n     * @param timeBetweenScans The scan throttling in milliseconds.\n     */\n    public constructor(private reader: Reader, private timeBetweenScans: number = 500) { }\n\n    /**\n     * Starts the decoding from the actual or a new video element.\n     *\n     * @param callbackFn The callback to be executed after every scan attempt\n     * @param deviceId The device's to be used Id\n     * @param videoElement A new video element\n     */\n    public decodeFromInputVideoDevice(callbackFn: (result: Result) => any, deviceId?: string, videoElement?: HTMLVideoElement): void {\n\n        this.reset();\n\n        this.prepareVideoElement(videoElement);\n\n        const video = deviceId === undefined\n            ? { facingMode: { exact: 'environment' } }\n            : { deviceId: { exact: deviceId } };\n\n        const constraints: MediaStreamConstraints = {\n            audio: false,\n            video\n        };\n\n        navigator\n            .mediaDevices\n            .getUserMedia(constraints)\n            .then((stream: MediaStream) => this.startDecodeFromStream(stream, callbackFn))\n            .catch((err: any) => {\n                /* handle the error, or not */\n                console.error(err);\n            });\n    }\n\n    /**\n     * Sets the new stream and request a new decoding-with-delay.\n     *\n     * @param stream The stream to be shown in the video element.\n     * @param callbackFn A callback for the decode method.\n     */\n    private startDecodeFromStream(stream: MediaStream, callbackFn: (result: Result) => any): void {\n\n        this.stream = stream;\n\n        // Older browsers may not have srcObject\n        if ('srcObject' in this.videoElement) {\n            // @NOTE Throws Exception if interrupted by a new loaded request\n            this.videoElement.srcObject = stream;\n        } else {\n            // @NOTE Avoid using this in new browsers, as it is going away.\n            (<HTMLVideoElement>this.videoElement).src = window.URL.createObjectURL(stream);\n        }\n\n        this.videoPlayingEventListener = () => {\n            this.decodeWithDelay(callbackFn);\n        };\n\n        this.videoElement.addEventListener('playing', this.videoPlayingEventListener);\n\n        this.videoLoadedMetadataEventListener = () => {\n            this.videoElement.play();\n        };\n\n        this.videoElement.addEventListener('loadedmetadata', this.videoLoadedMetadataEventListener);\n    }\n\n    /**\n     * Sets a HTMLVideoElement for scanning or creates a new one.\n     *\n     * @param videoElement The HTMLVideoElement to be set.\n     */\n    private prepareVideoElement(videoElement?: HTMLVideoElement) {\n        if (!videoElement) {\n            this.videoElement = document.createElement('video');\n            this.videoElement.width = 200;\n            this.videoElement.height = 200;\n        } else {\n            this.videoElement = videoElement;\n        }\n    }\n\n    /**\n     *\n     * @param callbackFn\n     */\n    private decodeWithDelay(callbackFn: (result: Result) => any): void {\n        if (this.videoElement || this.imageElement) {\n            this.timeoutHandler = window.setTimeout(this.decode.bind(this, callbackFn), this.timeBetweenScans);\n        }\n\n    }\n\n    /**\n     * Does the real image decoding job.\n     *\n     * @param callbackFn\n     * @param retryIfNotFound\n     * @param retryIfChecksumOrFormatError\n     * @param once\n     */\n    private decode(\n        callbackFn: (result: Result) => any,\n        retryIfNotFound: boolean = true,\n        retryIfChecksumOrFormatError: boolean = true,\n        once = false\n    ): void {\n\n        if (undefined === this.canvasElementContext) {\n            this.prepareCaptureCanvas();\n        }\n\n        this.canvasElementContext.drawImage(this.videoElement || this.imageElement, 0, 0);\n\n        const luminanceSource = new HTMLCanvasElementLuminanceSource(this.canvasElement);\n        const binaryBitmap = new BinaryBitmap(new HybridBinarizer(luminanceSource));\n\n        try {\n\n            const result = this.readerDecode(binaryBitmap);\n\n            callbackFn(result);\n\n            if (!once && !!this.stream) {\n                setTimeout(() => this.decodeWithDelay(callbackFn), this.timeBetweenScans);\n            }\n\n        } catch (re) {\n\n            console.debug(retryIfChecksumOrFormatError, re);\n\n            if (retryIfNotFound && Exception.isOfType(re, Exception.NotFoundException)) {\n\n                console.debug('zxing-scanner', 'QR-code not-found, trying again...');\n\n                this.decodeWithDelay(callbackFn);\n\n            } else if (\n                retryIfChecksumOrFormatError &&\n                (\n                    Exception.isOfType(re, Exception.ChecksumException) ||\n                    Exception.isOfType(re, Exception.FormatException)\n                )\n            ) {\n                console.warn('zxing-scanner', 'Checksum or format error, trying again...', re);\n\n                this.decodeWithDelay(callbackFn);\n            }\n        }\n    }\n\n    /**\n     * Alias for this.reader.decode\n     *\n     * @param binaryBitmap\n     */\n    protected readerDecode(binaryBitmap: BinaryBitmap): Result {\n        return this.reader.decode(binaryBitmap);\n    }\n\n    /**\n     * 🖌 Prepares the canvas for capture and scan frames.\n     */\n    private prepareCaptureCanvas() {\n\n        const canvasElement = document.createElement('canvas');\n\n        let width: number;\n        let height: number;\n\n        if (undefined !== this.videoElement) {\n            width = this.videoElement.videoWidth;\n            height = this.videoElement.videoHeight;\n        } else {\n            width = this.imageElement.naturalWidth || this.imageElement.width;\n            height = this.imageElement.naturalHeight || this.imageElement.height;\n        }\n\n        canvasElement.style.width = width + 'px';\n        canvasElement.style.height = height + 'px';\n        canvasElement.width = width;\n        canvasElement.height = height;\n\n        this.canvasElement = canvasElement;\n        this.canvasElementContext = canvasElement.getContext('2d');\n    }\n\n    /**\n     * Stops the continuous scan and cleans the stream.\n     */\n    private stop(): void {\n\n        if (this.timeoutHandler) {\n            window.clearTimeout(this.timeoutHandler);\n            this.timeoutHandler = null;\n        }\n\n        if (this.stream) {\n            this.stream.getTracks()[0].stop();\n            this.stream = null;\n        }\n\n    }\n\n    /**\n     * Resets the scanner and it's configurations.\n     */\n    public reset(): void {\n\n        // stops the camera, preview and scan 🔴\n\n        this.stop();\n\n        if (this.videoElement) {\n\n            // first gives freedon to the element 🕊\n\n            if (undefined !== this.videoPlayEndedEventListener) {\n                this.videoElement.removeEventListener('ended', this.videoPlayEndedEventListener);\n            }\n\n            if (undefined !== this.videoPlayingEventListener) {\n                this.videoElement.removeEventListener('playing', this.videoPlayingEventListener);\n            }\n\n            if (undefined !== this.videoLoadedMetadataEventListener) {\n                this.videoElement.removeEventListener('loadedmetadata', this.videoLoadedMetadataEventListener);\n            }\n\n            // then forgets about that element 😢\n\n            // Clear the stream\n            if (this.videoElement.srcObject) (<any>this.videoElement.srcObject).getTracks()[0].stop();\n\n            this.videoElement.srcObject = undefined;\n            this.videoElement.removeAttribute('src');\n            this.videoElement = undefined;\n        }\n\n        if (this.imageElement) {\n\n            // first gives freedon to the element 🕊\n\n            if (undefined !== this.videoPlayEndedEventListener) {\n                this.imageElement.removeEventListener('load', this.imageLoadedEventListener);\n            }\n\n            // then forgets about that element 😢\n\n            this.imageElement.src = undefined;\n            this.imageElement.removeAttribute('src');\n            this.imageElement = undefined;\n        }\n\n        // cleans canvas references 🖌\n\n        this.canvasElementContext = undefined;\n        this.canvasElement = undefined;\n    }\n}\n",
    "import { QRCodeReader } from '@zxing/library';\n\nimport { BrowserCodeReader } from './browser-code-reader';\n\nexport class BrowserQRCodeReader extends BrowserCodeReader {\n    public constructor(timeBetweenScansMillis: number = 500) {\n        super(new QRCodeReader(), timeBetweenScansMillis);\n    }\n}\n",
    "import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\n\nimport {Result} from '@zxing/library';\n\nimport {BrowserQRCodeReader} from './browser-qr-code-reader';\n\n@Component({\n    selector: 'zxing-scanner',\n    template: `<video [ngClass]=\"cssClass\" #preview>\n    <p>\n        Your browser does not support this feature, please try to upgrade it.\n    </p>\n    <p>\n        Seu navegador não suporta este recurso, por favor tente atualizá-lo.\n    </p>\n</video>\n`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ZXingScannerComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n    /**\n     * The ZXing code reader.\n     */\n    private codeReader: BrowserQRCodeReader = new BrowserQRCodeReader(1500);\n\n    /**\n     * Says if some native API is supported.\n     */\n    private isEnumerateDevicesSuported: boolean;\n\n    /**\n     * List of enable video-input devices.\n     */\n    private videoInputDevices: MediaDeviceInfo[];\n    /**\n     * The actual device used to scan things.\n     */\n    private videoInputDevice: MediaDeviceInfo;\n\n    /**\n     * Says if the user allowedthe use of the camera or not.\n     */\n    private hasPermission: boolean;\n\n    /**\n     * Reference to the preview element, should be the `video` tag.\n     */\n    @ViewChild('preview')\n    previewElemRef: ElementRef;\n\n    /**\n     * The scan throttling (time between scans) in milliseconds.\n     */\n    @Input()\n    scanThrottling = 1500;\n\n    /**\n     * Allow start scan or not.\n     */\n    @Input()\n    scannerEnabled = true;\n\n    /**\n     * The device that should be used to scan things.\n     */\n    @Input()\n    device: MediaDeviceInfo;\n\n    /**\n     * The value of the HTML video's class attribute.\n     */\n    @Input()\n    cssClass: string;\n\n    /**\n     * Enable or disable autofocus of the camera (might have an impact on performance)\n     */\n    @Input()\n    autofocusEnabled = true;\n\n    /**\n     * Emitts events when a scan is successful performed, will inject the string value of the QR-code to the callback.\n     */\n    @Output()\n    scanSuccess = new EventEmitter<string>();\n\n    /**\n     * Emitts events when a scan fails without errors, usefull to know how much scan tries where made.\n     */\n    @Output()\n    scanFailure = new EventEmitter<void>();\n\n    /**\n     * Emitts events when a scan throws some error, will inject the error to the callback.\n     */\n    @Output()\n    scanError = new EventEmitter<Error>();\n\n    /**\n     * Emitts events when a scan is performed, will inject the Result value of the QR-code scan (if available) to the callback.\n     */\n    @Output()\n    scanComplete = new EventEmitter<Result>();\n\n    /**\n     * Emitts events when no cameras are found, will inject an exception (if available) to the callback.\n     */\n    @Output()\n    camerasFound = new EventEmitter<MediaDeviceInfo[]>();\n\n    /**\n     * Emitts events when no cameras are found, will inject an exception (if available) to the callback.\n     */\n    @Output()\n    camerasNotFound = new EventEmitter<any>();\n\n    /**\n     * Emitts events when the users answers for permission.\n     */\n    @Output()\n    permissionResponse = new EventEmitter<boolean>();\n\n    /**\n     * Constructor to build the object and do some DI.\n     */\n    constructor() {\n        this.isEnumerateDevicesSuported = !!(navigator.mediaDevices && navigator.mediaDevices.enumerateDevices);\n    }\n\n    /**\n     * Manages the bindinded property changes.\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges): void {\n\n        if (changes.scannerEnabled) {\n            if (!this.scannerEnabled) {\n                this.resetScan();\n            } else if (this.videoInputDevice) {\n                this.scan(this.videoInputDevice.deviceId);\n            }\n        }\n\n        if (changes.device) {\n            if (this.device) {\n                this.changeDevice(this.device);\n            } else {\n                console.warn('zxing-scanner', 'device', 'Unselected device.');\n                this.resetScan();\n            }\n        }\n\n        if (changes.scanThrottling) {\n            this.setCodeReaderThrottling(this.scanThrottling);\n        }\n    }\n\n    /**\n     * Executed after the view initialization.\n     */\n    ngAfterViewInit(): void {\n\n        // Chrome 63 fix\n        if (!this.previewElemRef) {\n            console.warn('zxing-scanner', 'Preview element not found!');\n            return;\n        }\n\n        // iOS 11 Fix\n        this.previewElemRef.nativeElement.setAttribute('autoplay', false);\n        this.previewElemRef.nativeElement.setAttribute('muted', true);\n        this.previewElemRef.nativeElement.setAttribute('playsinline', true);\n        this.previewElemRef.nativeElement.setAttribute('autofocus', this.autofocusEnabled);\n\n        this.askForPermission().subscribe((hasPermission: boolean) => {\n\n            if (hasPermission) {\n\n                // gets and enumerates all video devices\n                this.enumarateVideoDevices((videoInputDevices: MediaDeviceInfo[]) => {\n\n                    if (videoInputDevices && videoInputDevices.length > 0) {\n                        this.camerasFound.next(videoInputDevices);\n                    } else {\n                        this.camerasNotFound.next();\n                    }\n\n                });\n\n                this.startScan(this.videoInputDevice);\n\n            } else {\n                console.warn('User has denied permission.');\n            }\n\n        });\n    }\n\n    /**\n     * Executes some actions before destroy the component.\n     */\n    ngOnDestroy(): void {\n        this.resetScan();\n    }\n\n    /**\n     * Starts a new QR-scanner to set a new scan throttling.\n     *\n     * @param throttling The scan speed in milliseconds.\n     */\n    setCodeReaderThrottling(throttling: number): void {\n        this.codeReader = new BrowserQRCodeReader(throttling);\n    }\n\n    /**\n     * Properly changes the actual target device.\n     *\n     * @param device\n     */\n    changeDevice(device: MediaDeviceInfo): void {\n        this.videoInputDevice = device;\n        this.startScan(device);\n    }\n\n    /**\n     * Properly changes the actual target device using it's deviceId.\n     *\n     * @param deviceId\n     */\n    changeDeviceById(deviceId: string): void {\n        this.changeDevice(this.getDeviceById(deviceId));\n    }\n\n    /**\n     * Properly returns the target device using it's deviceId.\n     *\n     * @param deviceId\n     */\n    getDeviceById(deviceId: string): MediaDeviceInfo {\n        return this.videoInputDevices.find(device => device.deviceId === deviceId);\n    }\n\n    /**\n     * Gets and registers all cammeras.\n     */\n    askForPermission(): EventEmitter<boolean> {\n\n        // Will try to ask for permission\n        navigator\n            .mediaDevices\n            .getUserMedia({audio: false, video: true})\n            .then((stream: MediaStream) => {\n\n                try {\n\n                    // Start stream so Browser can display permission-dialog (\"Website wants to access your camera, allow?\")\n                    this.previewElemRef.nativeElement.srcObject = stream;\n\n                    // After permission was granted, we can stop it again\n                    stream.getVideoTracks().forEach(track => {\n                        track.stop();\n                    });\n\n                    this.previewElemRef.nativeElement.srcObject = undefined;\n\n                    // if the scripts lives until here, that's only one mean:\n\n                    // permission granted\n                    this.hasPermission = true;\n\n                    this.permissionResponse.next(this.hasPermission);\n\n                } catch (err) {\n\n                    console.error('zxing-scanner', 'askForPermission', err);\n\n                    // permission aborted\n                    this.hasPermission = undefined;\n\n                    this.permissionResponse.next(undefined);\n                }\n\n            })\n            .catch((err: DOMException) => {\n\n                // failed to grant permission to video input\n\n                console.warn('zxing-scanner', 'askForPermission', err);\n\n                switch (err.name) {\n\n                    case 'NotAllowedError':\n\n                        // permission denied\n                        this.hasPermission = false;\n\n                        this.permissionResponse.next(this.hasPermission);\n                        break;\n\n                    case 'NotFoundError':\n                        this.camerasNotFound.next(err);\n                        break;\n\n                    default:\n                        this.permissionResponse.next(undefined);\n                        break;\n\n                }\n\n            });\n\n        // Returns the event emitter, so thedev can subscribe to it\n        return this.permissionResponse;\n    }\n\n    /**\n     * Starts the continuous scanning for the given device.\n     *\n     * @param deviceId The deviceId from the device.\n     */\n    scan(deviceId: string): void {\n        try {\n\n            this.codeReader.decodeFromInputVideoDevice((result: any) => {\n\n                console.debug('zxing-scanner', 'scan', 'result: ', result);\n\n                if (result) {\n                    this.dispatchScanSuccess(result);\n                } else {\n                    this.dispatchScanFailure();\n                }\n\n                this.dispatchScanComplete(result);\n\n            }, deviceId, this.previewElemRef.nativeElement);\n\n        } catch (err) {\n            this.dispatchScanError(err);\n            this.dispatchScanComplete(undefined);\n        }\n    }\n\n    /**\n     * Starts the scanning if allowed.\n     *\n     * @param device The device to be used in the scan.\n     */\n    startScan(device: MediaDeviceInfo): void {\n        if (this.scannerEnabled && device) {\n            this.scan(device.deviceId);\n        }\n    }\n\n    /**\n     * Stops the scan service.\n     */\n    resetScan(): void {\n        this.codeReader.reset();\n    }\n\n    /**\n     * Dispatches the scan success event.\n     *\n     * @param result the scan result.\n     */\n    private dispatchScanSuccess(result: Result): void {\n        this.scanSuccess.next(result.getText());\n    }\n\n    /**\n     * Dispatches the scan failure event.\n     */\n    private dispatchScanFailure(): void {\n        this.scanFailure.next();\n    }\n\n    /**\n     * Dispatches the scan error event.\n     *\n     * @param err the error thing.\n     */\n    private dispatchScanError(error: any): void {\n        this.scanError.next(error);\n    }\n\n    /**\n     * Dispatches the scan event.\n     *\n     * @param result the scan result.\n     */\n    private dispatchScanComplete(result: Result): void {\n        this.scanComplete.next(result);\n    }\n\n    /**\n     * Enumerates all the available devices.\n     *\n     * @param successCallback\n     */\n    enumarateVideoDevices(successCallback: any): void {\n\n        if (!this.isEnumerateDevicesSuported) {\n            console.error('zxing-scanner', 'enumarateVideoDevices', 'Can\\'t enumerate devices, method not supported.');\n            return;\n        }\n\n        navigator.mediaDevices.enumerateDevices().then((devices: MediaDeviceInfo[]) => {\n\n            this.videoInputDevices = [];\n\n            for (const deviceI of devices) {\n\n                // @todo type this as `MediaDeviceInfo`\n                const device: any = {};\n\n                // tslint:disable-next-line:forin\n                for (const key in deviceI) {\n                    device[key] = deviceI[key];\n                }\n\n                if (device.kind === 'video') {\n                    device.kind = 'videoinput';\n                }\n\n                if (!device.deviceId) {\n                    device.deviceId = (<any>device).id;\n                }\n\n                if (!device.label) {\n                    device.label = 'Camera (no-permission)';\n                }\n\n                if (device.kind === 'videoinput') {\n                    this.videoInputDevices.push(device);\n                }\n            }\n\n            successCallback(this.videoInputDevices);\n        });\n    }\n}\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { ZXingScannerComponent } from './zxing-scanner.component';\n\nexport type ZXingScannerComponent = ZXingScannerComponent;\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    declarations: [ZXingScannerComponent],\n    exports: [ZXingScannerComponent],\n})\nexport class ZXingScannerModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ZXingScannerModule\n        };\n    }\n}\n"
  ],
  "names": [
    "extendStatics",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "BrowserQRCodeReader",
    "_super",
    "timeBetweenScansMillis",
    "call",
    "this",
    "QRCodeReader",
    "__",
    "constructor",
    "prototype",
    "create",
    "tslib_1.__extends",
    "BrowserCodeReader",
    "reader",
    "timeBetweenScans",
    "decodeFromInputVideoDevice",
    "callbackFn",
    "deviceId",
    "videoElement",
    "_this",
    "reset",
    "prepareVideoElement",
    "constraints",
    "audio",
    "video",
    "undefined",
    "facingMode",
    "exact",
    "navigator",
    "mediaDevices",
    "getUserMedia",
    "then",
    "stream",
    "startDecodeFromStream",
    "catch",
    "err",
    "console",
    "error",
    "srcObject",
    "src",
    "window",
    "URL",
    "createObjectURL",
    "videoPlayingEventListener",
    "decodeWithDelay",
    "addEventListener",
    "videoLoadedMetadataEventListener",
    "play",
    "document",
    "createElement",
    "width",
    "height",
    "imageElement",
    "timeoutHandler",
    "setTimeout",
    "decode",
    "bind",
    "retryIfNotFound",
    "retryIfChecksumOrFormatError",
    "once",
    "canvasElementContext",
    "prepareCaptureCanvas",
    "drawImage",
    "luminanceSource",
    "HTMLCanvasElementLuminanceSource",
    "canvasElement",
    "binaryBitmap",
    "BinaryBitmap",
    "HybridBinarizer",
    "result",
    "readerDecode",
    "re",
    "debug",
    "Exception",
    "isOfType",
    "NotFoundException",
    "ChecksumException",
    "FormatException",
    "warn",
    "videoWidth",
    "videoHeight",
    "naturalWidth",
    "naturalHeight",
    "style",
    "getContext",
    "stop",
    "clearTimeout",
    "getTracks",
    "videoPlayEndedEventListener",
    "removeEventListener",
    "removeAttribute",
    "imageLoadedEventListener",
    "ZXingScannerComponent",
    "codeReader",
    "scanThrottling",
    "scannerEnabled",
    "autofocusEnabled",
    "scanSuccess",
    "EventEmitter",
    "scanFailure",
    "scanError",
    "scanComplete",
    "camerasFound",
    "camerasNotFound",
    "permissionResponse",
    "isEnumerateDevicesSuported",
    "enumerateDevices",
    "ngOnChanges",
    "changes",
    "videoInputDevice",
    "scan",
    "resetScan",
    "device",
    "changeDevice",
    "setCodeReaderThrottling",
    "ngAfterViewInit",
    "previewElemRef",
    "nativeElement",
    "setAttribute",
    "askForPermission",
    "subscribe",
    "hasPermission",
    "enumarateVideoDevices",
    "videoInputDevices",
    "length",
    "next",
    "startScan",
    "ngOnDestroy",
    "throttling",
    "changeDeviceById",
    "getDeviceById",
    "find",
    "getVideoTracks",
    "forEach",
    "track",
    "name",
    "dispatchScanSuccess",
    "dispatchScanFailure",
    "dispatchScanComplete",
    "dispatchScanError",
    "getText",
    "successCallback",
    "devices",
    "devices_1",
    "o",
    "m",
    "Symbol",
    "iterator",
    "i",
    "value",
    "done",
    "tslib_1.__values",
    "devices_1_1",
    "deviceI",
    "key",
    "kind",
    "id",
    "label",
    "push",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "ViewChild",
    "Input",
    "cssClass",
    "Output",
    "ZXingScannerModule",
    "forRoot",
    "ngModule",
    "NgModule",
    "imports",
    "CommonModule",
    "FormsModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
